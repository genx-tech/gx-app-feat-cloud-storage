{"version":3,"sources":["../../src/drivers/s3.js"],"names":["S3Service","constructor","app","options","endpoint","accessKeyId","secretAccessKey","bucket","AWS","tryRequire","spacesEndpoint","Endpoint","client","S3","signatureVersion","getUploadUrl_","objectKey","contentType","extra","getSignedUrl","Bucket","Key","ContentType","Expires","getDownloadUrl_","module","exports"],"mappings":";;;;AAAA,MAAMA,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAACC,GAAD,EAAMC,OAAN,EAAe;AACtB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBC,MAAAA,eAAzB;AAA0CC,MAAAA;AAA1C,QAAqDJ,OAA3D;AAEA,UAAMK,GAAG,GAAGN,GAAG,CAACO,UAAJ,CAAe,SAAf,CAAZ;AAEA,UAAMC,cAAc,GAAG,IAAIF,GAAG,CAACG,QAAR,CAAiBP,QAAjB,CAAvB;AAEA,SAAKQ,MAAL,GAAc,IAAIJ,GAAG,CAACK,EAAR,CAAW;AACrBT,MAAAA,QAAQ,EAAEM,cADW;AAErBL,MAAAA,WAFqB;AAGrBC,MAAAA,eAHqB;AAIrBQ,MAAAA,gBAAgB,EAAE;AAJG,KAAX,CAAd;AAOA,SAAKP,MAAL,GAAcA,MAAd;AACH;;AAEkB,QAAbQ,aAAa,CAACC,SAAD,EAAYC,WAAZ,EAAyBC,KAAzB,EAAgC;AAC/C,WAAO,KAAKN,MAAL,CAAYO,YAAZ,CAAyB,WAAzB,EAAsC;AACzCC,MAAAA,MAAM,EAAE,KAAKb,MAD4B;AAEzCc,MAAAA,GAAG,EAAEL,SAFoC;AAGzCM,MAAAA,WAAW,EAAEL,WAAW,IAAI,MAHa;AAIzCM,MAAAA,OAAO,EAAE,GAJgC;AAKzC,SAAGL;AALsC,KAAtC,CAAP;AAOH;;AAEoB,QAAfM,eAAe,CAACR,SAAD,EAAYE,KAAZ,EAAmB;AACpC,WAAO,KAAKN,MAAL,CAAYO,YAAZ,CAAyB,WAAzB,EAAsC;AACzCC,MAAAA,MAAM,EAAE,KAAKb,MAD4B;AAEzCc,MAAAA,GAAG,EAAEL,SAFoC;AAGzC,SAAGE;AAHsC,KAAtC,CAAP;AAKH;;AAlCW;;AAmCf;AAEDO,MAAM,CAACC,OAAP,GAAiB1B,SAAjB","sourcesContent":["class S3Service {\n    constructor(app, options) {\n        const { endpoint, accessKeyId, secretAccessKey, bucket } = options;\n        \n        const AWS = app.tryRequire(\"aws-sdk\");\n\n        const spacesEndpoint = new AWS.Endpoint(endpoint);\n\n        this.client = new AWS.S3({\n            endpoint: spacesEndpoint,\n            accessKeyId,\n            secretAccessKey,\n            signatureVersion: 'v4',\n        });\n\n        this.bucket = bucket;\n    }\n\n    async getUploadUrl_(objectKey, contentType, extra) {\n        return this.client.getSignedUrl('putObject', {\n            Bucket: this.bucket,\n            Key: objectKey,\n            ContentType: contentType || 'text',\n            Expires: 300,\n            ...extra\n        });\n    }\n\n    async getDownloadUrl_(objectKey, extra) {\n        return this.client.getSignedUrl('getObject', {\n            Bucket: this.bucket,\n            Key: objectKey,\n            ...extra\n        });\n    }\n};\n\nmodule.exports = S3Service;\n"],"file":"s3.js"}