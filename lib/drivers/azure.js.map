{"version":3,"sources":["../../src/drivers/azure.js"],"names":["AzureService","constructor","app","options","accountName","accountKey","containerName","StorageBlob","tryRequire","BlobServiceClient","StorageSharedKeyCredential","BlobSASPermissions","sharedKeyCredential","endpoint","blobServiceClient","client","getContainerClient","createBlobSASPermissions","getUploadUrl_","objectKey","contentType","extra","blockBlobClient","getBlockBlobClient","permissions","create","write","expiresOn","now","plus","minutes","toJSDate","generateSasUrl","getDownloadUrl_","read","module","exports"],"mappings":";;;;AAAA,MAAMA,YAAN,CAAmB;AACfC,EAAAA,WAAW,CAACC,GAAD,EAAMC,OAAN,EAAe;AACtB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAA6CH,OAAnD;AACA,UAAMI,WAAW,GAAGL,GAAG,CAACM,UAAJ,CAAe,qBAAf,CAApB;AAEA,SAAKN,GAAL,GAAWA,GAAX;AAEA,UAAM;AACFO,MAAAA,iBADE;AAEFC,MAAAA,0BAFE;AAGFC,MAAAA;AAHE,QAIFJ,WAJJ;AAQA,UAAMK,mBAAmB,GAAG,IAAIF,0BAAJ,CACxBN,WADwB,EAExBC,UAFwB,CAA5B;AAKA,UAAMQ,QAAQ,GAAI,WAAUT,WAAY,wBAAxC;AAEA,UAAMU,iBAAiB,GAAG,IAAIL,iBAAJ,CACtBI,QADsB,EAEtBD,mBAFsB,CAA1B;AAKA,SAAKG,MAAL,GAAcD,iBAAiB,CAACE,kBAAlB,CAAqCV,aAArC,CAAd;;AAEA,SAAKW,wBAAL,GAAgC,MAAM,IAAIN,kBAAJ,EAAtC;AACH;;AAEkB,QAAbO,aAAa,CAACC,SAAD,EAAYC,WAAZ,EAAyBC,KAAzB,EAAgC;AAC/C,UAAMC,eAAe,GAAG,KAAKP,MAAL,CAAYQ,kBAAZ,CAA+BJ,SAA/B,CAAxB;AACA,UAAMK,WAAW,GAAG,KAAKP,wBAAL,EAApB;AACAO,IAAAA,WAAW,CAACC,MAAZ,GAAqB,IAArB;AACAD,IAAAA,WAAW,CAACE,KAAZ,GAAoB,IAApB;AAGA,UAAMC,SAAS,GAAG,KAAKzB,GAAL,CAAS0B,GAAT,GAAeC,IAAf,CAAoB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApB,EAAoCC,QAApC,EAAlB;AAEA,UAAM5B,OAAO,GAAG;AACZwB,MAAAA,SADY;AAEZH,MAAAA,WAFY;AAGZJ,MAAAA,WAHY;AAIZ,SAAGC;AAJS,KAAhB;AAOA,WAAOC,eAAe,CAACU,cAAhB,CAA+B7B,OAA/B,CAAP;AACH;;AAEoB,QAAf8B,eAAe,CAACd,SAAD,EAAYE,KAAZ,EAAmB;AACpC,UAAMC,eAAe,GAAG,KAAKP,MAAL,CAAYQ,kBAAZ,CAA+BJ,SAA/B,CAAxB;AACA,UAAMK,WAAW,GAAG,KAAKP,wBAAL,EAApB;AACAO,IAAAA,WAAW,CAACU,IAAZ,GAAmB,IAAnB;AAGA,UAAMP,SAAS,GAAG,KAAKzB,GAAL,CAAS0B,GAAT,GAAeC,IAAf,CAAoB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApB,EAAoCC,QAApC,EAAlB;AAEA,UAAM5B,OAAO,GAAG;AACZwB,MAAAA,SADY;AAEZH,MAAAA,WAFY;AAGZ,SAAGH;AAHS,KAAhB;AAMA,WAAOC,eAAe,CAACU,cAAhB,CAA+B7B,OAA/B,CAAP;AACH;;AAlEc;;AAqEnBgC,MAAM,CAACC,OAAP,GAAiBpC,YAAjB","sourcesContent":["class AzureService {\n    constructor(app, options) {\n        const { accountName, accountKey, containerName } = options;\n        const StorageBlob = app.tryRequire('@azure/storage-blob');\n\n        this.app = app;\n\n        const {\n            BlobServiceClient,\n            StorageSharedKeyCredential,\n            BlobSASPermissions,\n        } = StorageBlob;\n\n        // Use StorageSharedKeyCredential with storage account and account key\n        // StorageSharedKeyCredential is only available in Node.js runtime, not in browsers\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n            accountName,\n            accountKey\n        );\n\n        const endpoint = `https://${accountName}.blob.core.windows.net`;\n\n        const blobServiceClient = new BlobServiceClient(\n            endpoint,\n            sharedKeyCredential\n        );\n\n        this.client = blobServiceClient.getContainerClient(containerName);\n\n        this.createBlobSASPermissions = () => new BlobSASPermissions();\n    }\n\n    async getUploadUrl_(objectKey, contentType, extra) {\n        const blockBlobClient = this.client.getBlockBlobClient(objectKey);\n        const permissions = this.createBlobSASPermissions();\n        permissions.create = true;\n        permissions.write = true;\n\n        // default 5 minutes\n        const expiresOn = this.app.now().plus({ minutes: 5 }).toJSDate();\n\n        const options = {\n            expiresOn,\n            permissions,\n            contentType,\n            ...extra,\n        };\n\n        return blockBlobClient.generateSasUrl(options);\n    }\n\n    async getDownloadUrl_(objectKey, extra) {\n        const blockBlobClient = this.client.getBlockBlobClient(objectKey);\n        const permissions = this.createBlobSASPermissions();\n        permissions.read = true;\n\n        // default 5 minutes\n        const expiresOn = this.app.now().plus({ minutes: 5 }).toJSDate();\n\n        const options = {\n            expiresOn,\n            permissions,\n            ...extra,\n        };\n\n        return blockBlobClient.generateSasUrl(options);\n    }\n}\n\nmodule.exports = AzureService;\n"],"file":"azure.js"}